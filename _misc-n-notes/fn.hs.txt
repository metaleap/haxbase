
applied :: (Functor f)=>  f (a->b)  ->  a  ->  f b
applied funcs value =
    funcs >~ ($ value)

anyOf ::  [a->Bool]  ->  a  ->  Bool
anyOf predicates =
    or . (applied predicates)

allOf ::  [a->Bool]  ->  a  ->  Bool
allOf predicates =
    and . (applied predicates)

noneOf ::  [a->Bool]  ->  a  ->  Bool
noneOf predicates =
    not . (anyOf predicates)






fuseElems is2fuse fusion (this:next:more) =
    (fused:rest) where
        nofuse = not$ is2fuse this next
        fused = nofuse |? this |! fusion this next
        rest = fuseElems is2fuse fusion$
                nofuse |? (next:more) |! more
fuseElems _ _ l = l
